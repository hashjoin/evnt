#!/bin/ksh
#
# File:
#       ossrptw.sh
# EVNT_REG:     OS_SCRIPT *SEEDMON 1.1
# <EVNT_NAME>Os Script Watcher</EVNT_NAME>
#
# Author:
#       Vitaliy Mogilevskiy VMOGILEV (vit100gain@earthlink.net)
#
# Usage:
# <EVNT_DESC>
# Looks for ATTRIBUTE and OUTPUT file generated by any
# OS level script.  ATTRIBUTE file should be in the
# following format:
# ------------ start ATTRIBUTE example ----------------
# ATTR1,ATTR2,ATTR3
# ATTR1,ATTR2,ATTR3
# ATTR1,ATTR2,ATTR3
# ------------ end ATTRIBUTE example ------------------
#
# OUTPUT file is free format.
#
# Very useful for events that require precise scheduling thus
# should not be managed by EVNT system scheduling.  Instead 
# OS_SCRIPT event is scheduled to run every N minutes checking
# for an occurrence of ATTRIBUTE file generated by OS process.
#
# An example would be DATABASE DOWN FOR BACKUP event:
# 
# 	Lets say you take COLD backup of a database at 10:00PM
# 	on SUNDAY and want to make sure that the database went
# 	down for backup, one way of ensuring this would be to schedule
# 	an event that will run lets say at 10:15PM checking if
# 	any oracle database processes are still present ...
# 	Well it's impossible to schedule an event thru EVNT system
# 	to run at exactly 10:15PM on SUNDAY due to interval based 
#	architecture that EVNT system uses to resubmit events.
#
# REPORT ATTRIBUTES:
# -----------------------------
# set by OS script (custom)
#
# PARAMETER       DESCRIPTION                             EXAMPLE
# --------------  --------------------------------------  --------
# SCRIPT_NAME     case sensitive string used to lookup    myscript
#                 ATTRIBUTE and OUTPUT files generated
#                 by any OS level script, EVNT system 
#                 will attempt to find 
#                    <SCRIPT_NAME>.atr and
#                    <SCRIPT_NAME>.out files in 
#                    $SHARE_TOP/wrk directory
#
# Event is triggered when <SCRIPT_NAME>.atr is present, not empty and differs
# from it's previous occurrence stored in EVNT system.
# 
# Event is cleared when it was previously triggered and <SCRIPT_NAME>.atr is 
# either empty or not present.
# 
# <SCRIPT_NAME>.out is removed on event trigger.
# </EVNT_DESC>
#
#
# History:
#       VMOGILEV        22-APR-2003      Created
#

chkfile=$1
outfile=$2
clrfile=$3

if [ "$PARAM__SCRIPT_NAME" ]; then
	ATTR=$SHARE_TOP/wrk/$PARAM__SCRIPT_NAME.atr
	OUTP=$SHARE_TOP/wrk/$PARAM__SCRIPT_NAME.out
else
	echo "missing script name [${PARAM__SCRIPT_NAME}]"
	exit 1;
fi



if [ -f $ATTR ]; then
	# ------------------------------------------------
	# PROCESS FLOW:
	# ------------------------------------------------
	# a) don't remove/move attribute file the process 
	#    that created it is responsible for that.
	#
	# b) move the output file just so we don't have 
	#    huge output files laying around all over the 
	#    place.
	# ------------------------------------------------
	#
	cp $ATTR $chkfile
	if [ $? -gt 0 ]; then
		echo "error copying attribute file [${ATTR}] ..."
		exit 1;
	fi
	if [ -f $OUTP ]; then
		mv $OUTP $outfile
		if [ $? -gt 0 ]; then
			echo "error moving output file [${OUTP}] ..."
			exit 1;
		fi
	else
		echo "output file is not present ..."
	fi
else
	echo "attribute file is not present ..."
	touch $chkfile
fi

