#!/bin/ksh
#
# $Header mailsub.sh 06/11/2002 1.1
#
# File:
#       mailsub.sh
#
# Author:
#       Vitaliy Mogilevskiy VMOGILEV (www.dbatoolz.com)
#
# Purpose:
#       Process mail for single event ID
#
# Usage:
#       mailsub.sh <mail_list_file>
#	(called from mailall.sh generated by mailman.sh)
#
# History:
#	VMOGILEV	06/11/2002	Created
#	VMOGILEV	12/16/2002	made short file banner compact


usage()
{
echo `basename $0` " <mail_list_file> "
exit 1;
}



if [ "$1" ]; then
	mail_list_file=$1
	stat_update_file=$mail_list_file.sql
else
	usage ;
fi

set_email_status()
{
a_id=$1
ae_id=$2
etn_type=$3
exit_status=$4
echo "exec evnt_util_pkg.mail_ctrl(p_et_id => ${MAIL_ET_ID}, p_a_id => $a_id , p_ae_id => $ae_id , p_type => '$etn_type' , p_status => '$exit_status'); " >> $stat_update_file
}

process_event()
{
exit_status=$1
echo "exec evnt_util_pkg.mail_ctrl(p_et_id => ${MAIL_ET_ID}, p_type => 'T', p_status => '$exit_status'); " >> $stat_update_file
if [ "$exit_status" == "E" ]; then
	exit 0;
fi
}

echo `date` "   START:	sending mail TRIGGER_ID="$MAIL_ET_ID

# SETUP BANNERS
# ---------------

# long banner
#
echo "Time:  " $MAIL_TRG_TIME > $SHARE_TOP/tmp/$MAIL_FNLONG
echo "Event: " $MAIL_STATUS >> $SHARE_TOP/tmp/$MAIL_FNLONG
echo "Ack:   " $MAIL_ACK >> $SHARE_TOP/tmp/$MAIL_FNLONG
echo "Host:  " $MAIL_HOST >> $SHARE_TOP/tmp/$MAIL_FNLONG
echo "Sid:   " $MAIL_SID >> $SHARE_TOP/tmp/$MAIL_FNLONG
echo "Ref:   " $MAIL_DONE_BY >> $SHARE_TOP/tmp/$MAIL_FNLONG

# short banner
#
echo "${MAIL_TRG_TIME}" > $SHARE_TOP/tmp/$MAIL_FNSHORT
if [ "$MAIL_ACK" == "Yes" ]; then
	echo "${MAIL_ACK}" >> $SHARE_TOP/tmp/$MAIL_FNSHORT
fi
if [ "$MAIL_SID" ]; then
	echo "${MAIL_HOST}:${MAIL_SID}" >> $SHARE_TOP/tmp/$MAIL_FNSHORT
else
	echo "${MAIL_HOST}" >> $SHARE_TOP/tmp/$MAIL_FNSHORT
fi
echo "${MAIL_DONE_BY}" >> $SHARE_TOP/tmp/$MAIL_FNSHORT


sqlplus -s $uname_passwd <<EOF > /dev/null
WHENEVER SQLERROR EXIT FAILURE ROLLBACK
VARIABLE out_ref_id NUMBER
BEGIN
   evnt_util_pkg.get_event_output(NVL('$MAIL_ET_ID',-999),:out_ref_id);
END;
/
set feed off
set pages 0
set trims on
set lines 2000
spool $SHARE_TOP/tmp/$MAIL_FNSHORT.tmp
SELECT ep_desc
FROM event_parameters
WHERE ep_id = $MAIL_EP_ID ;
prompt 
SELECT eupo_out
FROM   evnt_util_pkg_out
WHERE  eupo_ref_id = :out_ref_id
order by eupo_ref_type
,        eupo_ref_id
,        eupo_id;
spool off
exit
EOF


if [ $? -gt 0 ]; then
        echo "   ERROR:	while getting event details!"
        process_event E ;
fi


cat $SHARE_TOP/tmp/$MAIL_FNSHORT.tmp >> $SHARE_TOP/tmp/$MAIL_FNSHORT
cat $SHARE_TOP/tmp/$MAIL_FNSHORT.tmp >> $SHARE_TOP/tmp/$MAIL_FNLONG
echo " " >> $SHARE_TOP/tmp/$MAIL_FNLONG
rm $SHARE_TOP/tmp/$MAIL_FNSHORT.tmp


# parse output for LONG FILE
# ---------------------------

sqlplus -s $uname_passwd <<EOF > /dev/null
WHENEVER SQLERROR EXIT FAILURE ROLLBACK
alter session set cursor_sharing=force;
set feed off
set pages 0
set trims on
set lines 256
spool $SHARE_TOP/tmp/$MAIL_FNLONG.tmp
SELECT eto_output_line
FROM event_trigger_output
WHERE et_id = $MAIL_ET_ID 
ORDER BY eto_id;
spool off
exit
EOF

if [ $? -gt 0 ]; then
        echo "   ERROR:	while getting event output!"
        process_event E ;
fi

cat $SHARE_TOP/tmp/$MAIL_FNLONG.tmp >> $SHARE_TOP/tmp/$MAIL_FNLONG
rm $SHARE_TOP/tmp/$MAIL_FNLONG.tmp


for i in `egrep ",${MAIL_FNSHORT}|,${MAIL_FNLONG}" $mail_list_file`
do
	admin_name=`echo $i | cut -d"," -f1 `
	admin_email=`echo $i | cut -d"," -f2 `
	attach_file=`echo $i | cut -d"," -f3 `
	a_id=`echo $i | cut -d"," -f4 `
	ae_id=`echo $i | cut -d"," -f5 `
	etn_type=`echo $i | cut -d"," -f6 `

	echo `date` "       sending mail to: $MAIL_ET_ID $admin_name $admin_email "

	$SYS_TOP/bin/sendmail.sh $admin_email "${global_mail_prefix}(${MAIL_ET_ID}) ${MAIL_STATUS}" $SHARE_TOP/tmp/$attach_file

	if [ $? -gt 0 ]; then
       		echo "   ERROR:	sending email!"
        	set_email_status $a_id $ae_id $etn_type E ;
	else
        	set_email_status $a_id $ae_id $etn_type C ;
	fi
done

rm $SHARE_TOP/tmp/$MAIL_FNSHORT
rm $SHARE_TOP/tmp/$MAIL_FNLONG

process_event C ;
echo `date` "   END:	sending mail "

